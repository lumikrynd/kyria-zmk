#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#include "keys_da.h"
#define DA_OE DA_O_SLASH
#define DA_AA DA_A_RING

#define DA_UM DA_UMLAUT
#define DA_QT DA_SQT
#define DA_MI DA_MINUS
#define DA_AC DA_ACUTE

#define L_DEF 0 // Default layer
#define L_DHR 1 // Default layer
#define L_NUR 2 // Numrow layer
#define L_NAV 3 // Navigation layer
#define L_FUN 4 // Function layer
#define L_CON 5 // Connection layer
#define L_NUP 6 // Numpad layer

/ {
    behaviors {
        hr: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_ae {
            timeout-ms = <35>;
            key-positions = <8 9>;
            bindings = <&kp DA_AE>;
            layers = <L_DEF L_DHR>;
        };
        combo_oe {
            timeout-ms = <35>;
            key-positions = <20 21>;
            bindings = <&kp DA_OE>;
            layers = <L_DEF L_DHR>;
        };
        combo_aa {
            timeout-ms = <35>;
            key-positions = <36 37>;
            bindings = <&kp DA_AA>;
            layers = <L_DEF L_DHR>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp TAB         &kp Q &kp W &kp E     &kp R    &kp T                                                        &kp Y        &kp U    &kp I     &kp O   &kp P     &kp BSPC
            &mt LCTRL ESC   &kp A &kp S &kp D     &kp F    &kp G                                                        &kp H        &kp J    &kp K     &kp L   &kp DA_QT &mt RCTRL DA_UM
            &mt LSHFT DA_LT &kp Z &kp X &kp C     &kp V    &kp B        &none     &mo L_NAV         &mo L_FUN &kp CAPS  &kp N        &kp M    &kp COMMA &kp DOT &kp DA_MI &mt RSHFT DA_AC
                                        &mo L_CON &kp LGUI &mt LALT RET &kp SPACE &mo L_NUR         &mo L_NUR &kp SPACE &mt RALT RET &kp RGUI &kp K_APP
            >;
        };

        default_homerow_layer {
            bindings = <
            &trans &trans     &trans     &trans      &hr RALT R  &trans                                    &trans &hr RALT U  &trans      &trans     &trans         &trans
            &trans &hr LGUI A &hr LALT S &hr LCTRL D &hr LSHFT F &trans                                    &trans &hr LSHFT J &hr LCTRL K &hr LALT L &hr LGUI DA_QT &trans
            &trans &trans     &trans     &trans      &trans      &trans &trans &trans        &trans &trans &trans &trans      &trans      &trans     &trans         &trans
                                         &trans      &trans      &trans &trans &trans        &trans &trans &trans &trans      &trans
            >;
        };

        numrow_layer {
            bindings = <
            &kp GRAVE     &kp N1     &kp N2     &kp N3     &kp N4     &kp N5                                     &kp N6       &kp N7     &kp N8     &kp N9     &kp N0     &kp MINUS
            &kp LS(GRAVE) &kp LS(N1) &kp LS(N2) &kp LS(N3) &kp RA(N4) &kp LS(N5)                                 &kp LS(N6)   &kp LS(N7) &kp LS(N8) &kp LS(N9) &kp LS(N0) &kp LS(MINUS)
            &kp RA(NUBS)  &none      &kp RA(N2) &kp RA(N3) &kp LS(N4) &none      &none &trans       &trans &none &kp RA(RBKT) &kp RA(N7) &kp RA(N8) &kp RA(N9) &kp RA(N0) &kp RA(EQUAL)
                                                &mo L_NUP  &none      &none      &none &trans       &trans &none &none        &none      &none
            >;
        };

        navigationd_layer {
            bindings = <
            &none &none    &none    &none     &none     &none                                &kp HOME &kp PG_DN  &kp PG_UP &kp END    &kp C_VOL_UP &kp DEL
            &none &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none                                &kp LEFT &kp DOWN   &kp UP    &kp RIGHT  &kp C_VOL_DN &kp INS
            &none &none    &none    &none     &none     &none &none &trans       &none &none &none    &kp C_PREV &kp C_PP  &kp C_NEXT &kp C_MUTE   &kp PSCRN
                                    &none     &none     &none &none &trans       &none &none &none    &none      &none
            >;
        };

        function_layer {
            bindings = <
            &none &kp F9 &kp F10 &kp F11 &kp F12 &none                                 &none &none     &none     &none    &none    &none
            &none &kp F5 &kp F6  &kp F7  &kp F8  &none                                 &none &kp RSHFT &kp RCTRL &kp LALT &kp RGUI &none
            &none &kp F1 &kp F2  &kp F3  &kp F4  &none &none &none        &trans &none &none &none     &none     &none    &none    &none
                                 &none   &none   &none &none &none        &trans &none &none &none     &none
            >;
        };

        connection_layer {
            bindings = <
            &none &none &none &none  &none &none                                         &out OUT_TOG &none        &none        &none        &none &none
            &none &none &none &none  &none &tog L_DHR                                    &none        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none &bt BT_CLR
            &none &none &none &none  &none &none      &none &none            &none &none &none        &bt BT_SEL 3 &bt BT_SEL 4 &none        &none &bt BT_CLR_ALL
                              &trans &none &none      &none &mo L_NUP        &none &none &none        &none        &none
            >;
        };

        numpad_layer {
            bindings = <
            &none &none    &none    &none     &none     &none                                &kp KP_NUM &kp KP_N7 &kp KP_N8  &kp KP_N9 &kp KP_MULTIPLY &kp KP_DIVIDE
            &none &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none                                &kp COMMA  &kp KP_N4 &kp KP_N5  &kp KP_N6 &kp KP_PLUS     &kp KP_MINUS
            &none &none    &none    &none     &none     &none &none &none        &none &none &kp DOT    &kp KP_N1 &kp KP_N2  &kp KP_N3 &none           &kp KP_ENTER
                                    &trans    &none     &none &none &trans       &none &none &kp KP_N0  &kp KP_N0 &kp KP_DOT
            >;
        };

//        template_layer {
//            bindings = <
//            &none &none &none &none &none &none                                &none &none &none &none &none &none
//            &none &none &none &none &none &none                                &none &none &none &none &none &none
//            &none &none &none &none &none &none &none &none        &none &none &none &none &none &none &none &none
//                              &none &none &none &none &none        &none &none &none &none &none
//            >;
//        };
    };
};
